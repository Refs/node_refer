
<!DOCTYPE html>
<html lang="zh-cn">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Bootstrap 101 Template</title>

    <!-- Bootstrap -->
    <link href="/css/bootstrap.min.css" rel="stylesheet">

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="http://cdn.bootcss.com/html5shiv/3.7.2/html5shiv.min.js"></script>
      <script src="http://cdn.bootcss.com/respond.js/1.4.2/respond.min.js"></script>
    <![endif]-->
    <style type="text/css">
      #success,#failed{
        display:none;
      }
      .liuyankuai{
        padding:10px 0;
        border-bottom:1px solid gray;
      }
    </style>
    
  </head>
  <body>
    <h1>我的留言本</h1>
     <div class="container">
      <div class="row">
      <form class="form-horizontal col-md-6" role="form">

        <div class="form-group">
          <label for="xingming" class="col-sm-2 control-label">name</label>
          <div class="col-sm-10">
            <input type="text" class="form-control" id="xingming" placeholder="name" name="name">
          </div>
        </div>

        <!--<div class="form-group">
          .form-group {
            margin-bottom: 15px;
          }
          相当于段落标签，就是两个表单元素之间的间距变大了，即增加了margin-bottom
        -->

        <div class="form-group">
          <label for="liuyan" class="col-sm-2 control-label">liuyan</label>
          <div class="col-sm-10">
            <textarea class="form-control" rows="3" id="liuyan" placeholder="留言" name="liuyan"></textarea>
          </div>
        </div>

            

        <div class="form-group">
          <div class="col-sm-offset-2 col-sm-10">
             <button id="tijiao" type="button" class="btn btn-success">提交</button>
            <!--从bootstrap中直接粘贴过来的一般都为type="submit"的button 发送只能发送get请求；如果想要发送post请求，就要将type改为button-->
          </div>
        </div>

      </form>
      </div>

        <div class="row" id="success"> 
          <div class="alert alert-success col-md-6" role="alert" >
            <a href="#" class="alert-link">相应成功</a>
          </div>
        </div>
        <div class="row" id="failed">
          <div class="alert alert-danger col-md-6" role="alert">
            <a href="#" class="alert-link">相应错误</a>
          </div>
        </div>

        <nav>
          <ul class="pagination">
            <li><a href="#">&laquo;</a></li>
            <!--<li data-page="1" class="yemaanniu active" ><a href="#">1</a></li>-->
            <!--<li data-page="2" class="yemaanniu"><a href="#">2</a></li>-->
            <!--<li data-page="3" class="yemaanniu"><a href="#">3</a></li>-->
            <!--<li data-page="4" class="yemaanniu"><a href="#">4</a></li>-->
            <!--<li data-page="5" class="yemaanniu"><a href="#">5</a></li>-->
            <% for (var i=1; i<=pageamount; i++){ %>

              <li data-page="<%=i%>" class="yemaanniu"><a href="#"><%=i%></a></li>
            
            <% } %>
            <li class="next-btn"><a href="#">&raquo;</a></li>
          </ul>
        </nav>

         <div id="quanbuliuyan" ></div>
    </div>

    <script type="text/template" id="moban">
      <div class="liuyankuai">
        <p>【姓名】：{{=xingming}}</p>
        <p>【留言】：{{=liuyan}}</p>
        <p>【时间】：{{=shijian}}</p>
        <p><a href="/shanchu?id={{=id}}" class="shanchu" >删除</a></p>
      </div>
    </script>

    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="/js/jquery-3.1.1.js"></script>
    <!--此处利用ctrl + shift + H, 引入地址时，一定要叫上后缀，否则浏览器请求不到-->
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="/js/bootstrap.min.js"></script>
    <script src="/js/underscore.js"></script>
    <script type="text/JavaScript">
    


    $(".yemaanniu:first").addClass("active");

    //1.维持一个全局变量nowpage
    var nowpage = 1; //页面初次加载的时候，active 的 page 为 1；

   //3.为上一页下一页按钮增加监听；
  $(".yemaanniu").click(function(){
      var page = parseInt($(this).attr("data-page"));
      //2.碰到那个页码按钮之后，就让我们的全局变量等于谁的page；
      var nowpage = page;

      getdate(page);
    $(this).addClass("active").siblings().removeClass("active");
    })

    getdate(1);

    $(".next-btn").click(function(){
      nowpage++;
      getdate(nowpage);
      //$("[data-page=nowpage]").addClass("active").siblings().removeClass("active");
    })


    function getdate(page){
      // ajax请求数据：
     $.get("/du?page="+(page-1), function(result){
          //服务器响应的result形式，应该是{"result":[{"xingming":"","liuyan":""},{"xingming":"","liuyan":""}]}的形式；
          //result返回的是一个查询结果
          
          //将服务器返回的数据，解析成json;
         
          //填充模板，直接从underscore文档里面复制
          // var compiled = _.template("hello: {{= name }}");
          // compiled({name: 'moe'});

          //得到模板，能成模板函数，这一步没必要放到，循环语句中；
          $("#quanbuliuyan").html("");
          var compiled = _.template($("#moban").html());
          for (var i=0; i < result.result.length;  i++){
                // 填充模板，用到了jquery.html() - 设置或返回所选元素的内容（包括 HTML 标记）
                var html = compiled({"xingming":result.result[i].xingming,"liuyan":result.result[i].liuyan,shijian:result.result[i].shijian,id:result.result[i]._id});
                //DOM操作追加节点，返回的是一个html字符串语句，类似 "<b>&lt;script&gt;</b>"，将这个语句放到html变量里
                $("#quanbuliuyan").append($(html));
                //这句话的逻辑，是以jquery方法创建元素，然后利用append方法来向#quanbuliuyan插入元素； 
                
                // 以$来创建元素，参见jquery文档，创建元素的3种方法
                // var txt1="<p>Text.</p>";               // 以 HTML 创建新元素
                // var txt2=$("<p></p>").text("Text.");   // 以 jQuery 创建新元素
                // var txt3=document.createElement("p");  // 以 DOM 创建新元素
          }
       
        });  //方法是直接从api粘贴过来的
    }

      $("#tijiao").click(function(){

          $("#success").hide();
          $("#failed").hide();
        
        //ajax提交表单
        $.post("/tijiao",{"name":$("#xingming").val(),"liuyan":$("#liuyan").val()},function(result){
          //  利用ajax去发送请求，服务器的相应会被回调函数的result参数捕获到，此处不用解析，可以直接打点调用返回对象的属性，因为jquery已经帮我们解析好了；
          if(result.result == -1){
              $("failed").fadeIn();
          }else if(result.result == 1 ){
              $("#success").fadeIn();
              var compiled = _.template($("#moban").html());
              var html = compiled({xingming:$("#xingming").val(),liuyan:$("#liuyan").val(),shijian:new Date(),id:123});
              $(html).insertBefore($("#quanbuliuyan"));
          }
        })
      })

    </script>
  
  </body>
</html>